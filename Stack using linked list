#include <iostream>
#include <chrono>
using namespace std;
using namespace std::chrono;

class Node {
public:
    int data;
    Node* next;

    Node(int data) {
        this->data = data;
        next = nullptr;
    }
};

class Stack {
private:
    Node* head;

public:
    Stack() {
        head = nullptr;
    }
    
    //check whether stack is empty
    bool is_empty() {
        return head == nullptr;
    }
    
    //push an element into stack
    void push(int x) {
        Node* new_node = new Node(x);
        new_node->next = head;
        head = new_node;
        cout << x << " pushed into stack" << endl;
    }
    
    //pop an element from stack
    int pop() {
        if (is_empty()) {
            cout << "Stack underflow" << endl;
            return -1;  
        }
        int x = head->data;
        Node* temp = head;
        head = head->next;
        delete temp;
        cout << x << " popped from stack" << endl;
        return x;
    }
    
    //display the stack elements
    void display() {
        if (is_empty()) {
            cout << "Stack is empty" << endl;
        } else {
            Node* temp = head;
            cout << "Stack elements: ";
            while (temp != nullptr) {
                cout << temp->data << " ";
                temp = temp->next;
            }
            cout << endl;
        }
    }
};

int main() {
    Stack s; // Create a new stack object
    auto startTime = chrono::high_resolution_clock::now();
    s.push(8);
    s.push(10);
    s.push(5);
    s.push(11);
    s.push(15);
    s.push(23);
    s.push(6);
    s.push(18);
    s.push(20);
    s.push(17);

    s.display();

    s.pop();
    s.pop();
    s.pop();
    s.pop();
    s.pop();

    s.display();

    s.push(4);
    s.push(30);
    s.push(3);
    s.push(1);
    
    s.display();

    auto endTime = chrono::high_resolution_clock::now();
    auto duration = chrono::duration_cast<chrono::microseconds>(endTime - startTime).count();
    cout << "Time taken for linked list stack : " << duration << " microsecondss"<<endl ;
    
}
